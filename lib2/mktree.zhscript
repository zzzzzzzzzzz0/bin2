赋予“--外”、“--简”、“--共”以“1”、。

赋予“.格次”以“0”。
定义“格次下”、“+”以下代码
	赋予“.格次”【上】【上】【上】以算术‘.格次’‘+’“1”。
上代码。
定义“树缩进枝”【无参】以下代码
	循环【‘.格次’】循环【7】“&nbsp;”。
上代码。

赋予“折”、“叠展钮”以“mktree_zhe__”、“mktree_zhzhbtn”。

定义“树加枝”、“名”、“折叠”以下代码
	先树缩进枝了
	“<a href="javascript:" onclick="‘折’(this)" class="‘叠展钮’"”
	先如果‘--简’那么“ title="‘名’"”了
	“>”
	先如果‘折叠’那么“+”否则“-”了
	“</a>”
	先如果不‘--简’那么“ <a href="javascript:" onclick="‘折’(this,1)">‘名’</a><br>”了
	“<span style="”先如果‘折叠’那么“display:none”了“">”
	先如果‘--简’那么“‘名’<br>”了
	先格次下“+”了
上代码。

定义“树毕加枝”【无参】以下代码
	“</span>”
	先格次下“-”了
上代码。

分叉‘参数数目’先
	“2”别名“选项”以“参数2”。
	“4”别名“选项”以“参数4”。
	“2”、“4”先
		加载“lib/gjke4”。
		如果‘选项’内包含“无外”那么赋予“--外”以。
		如果‘选项’内包含“无缩”那么定义“树缩进枝”【无参】以。
		如果‘选项’内包含“简”那么赋予“--简”以“1”。
		如果‘选项’内包含“共”那么赋予“--共”以“1”。
	了。
	“3”、“4”赋予“--共”以“1”。
了。

如果‘--共’那么
“<style>
.‘叠展钮’ {border-style:dotted; border-width:1px; padding:0 6px; text-decoration:none;}
</style>
<script>
function ‘折’(e, n) {
	if(n == 1)
		e = e.previousElementSibling;
	var s = e.nextElementSibling”先如果不‘--简’那么“.nextElementSibling.nextElementSibling”了“.style;
	var zhe = s.display == 'none';
	s.display = zhe ? 'inline' : 'none';
	e.innerHTML = zhe ? '-' : '+';
}
</script>”。

如果‘--外’那么“<div style="white-space:nowrap;">”。
分叉‘参数数目’先
	“3”、“4”先
		别名“目录”、“折叠代码”、“文件代码”以“参数1”、“参数2”、“参数3”。
		加载“lib/doscmd4”。
		加载“lib/file4”。
		加载“lib/gjke4”。
		赋予“目录”以调用‘去头尾’、‘目录’、“/”、“2”。
		解释下代码
			如果调用‘existdir’、‘目录’那么先
				赋予“搜”以调用‘dir.begin’、‘目录’、、“so3pbp-”。
				循环先
					赋予“名”以调用‘dir.next’、‘搜’。
					如果‘名’等于“”那么跳出。
					如果调用‘串尾匹配’、‘名’、“/”那么先
						树加枝先调用‘得路径部’、先调用‘串截取’、‘名’、“0”、“-1”了、“1”、“0”了“/”、解释‘折叠代码’。
						再来。
					了。
					如果调用‘串尾匹配’、‘名’、“|”那么先
						先树毕加枝了。
						再来。
					了。
					赋予“名2”以调用‘得路径部’、‘名’、“1”、“0”。
					赋予“文件”以“‘目录’/‘名’”。
					解释‘文件代码’。
					先树缩进枝了‘名2’“<br>”
				了。
				调用‘dir.end’、‘搜’。
			了否则先
				赋予“文件”以‘目录’。
				赋予“目录”以。
				赋予“名2”以调用‘得路径部’、‘文件’、“1”、“0”。
				解释‘文件代码’。
				‘名2’“<br>”
			了。
		上代码。
	了。
	“1”、“2”解释‘参数1’。
了。
如果‘--外’那么“</div>”。
